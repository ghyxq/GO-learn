1.defer语句，延迟函数的执行，当函数要返回的时候在执行对应的语句
    demo：
          defer fmt.Println("the last sentence")

    注意：
        func printnum(){
            for i:=0;i<5;i++{
                defer func(){
                  fmt.Println(i)
                 }()//注意这里，这里需要一个括号，匿名函数，并且没有传入参数，则使用的i则是最后的i
             }
         }
-----> 结果是：55555


         func printnum(){
                     for i:=0;i<5;i++{
                         defer func(){
                           fmt.Println(i)
                          }(i)//这里传入了参数，每次defer把对应的表达式压入栈中的时候会先计算出入参，然后在压入
                      }
                  }
----->  结果是：43210



        func printnum(){
                      for i:=0;i<5;i++{
                                 defer func(){
                                   fmt.Println(i)
                                  }(i*2)//这里传入了参数，每次defer把对应的表达式压入栈中的时候会先计算出入参，然后在压入
                              }
                          }
----->   结果是：86420
